pipeline {
    agent any
    environment {
        AWS_DEFAULT_REGION = 'us-east-1'
    }

    stages {

        stage('Docker') {
            steps {
                sh '''
                docker build -t terraform-docker .
                pwd
                ls -la
                docker run --rm -v $(pwd):/terraform terraform-docker init
                pwd
                ls -la
                '''
               // docker run --rm terraform-docker terraform --version
            }
        }
        // stage('Checkout Code') {
        //     steps {
        //         checkout scm
        //         sh 'ls -la'
        //     }
        // }

        stage("Confirm Terraform Version") {
            steps {
                sh '''
                docker run --rm -v $(pwd):/terraform terraform-docker terraform --version
                '''
            }
        }

        stage('Terraform Plan') {
            steps {
                withAWS(credentials:'AWS-CCIAB') {
                sh '''
                docker run --rm -v $(pwd):/terraform terraform-docker plan -out=tfplan
                '''
            }
        }
        }
        
        stage('Approve Plan') {
            steps {
                timeout(time: 5, unit: 'MINUTES') {
                     input cancel: 'Cancel', message: 'Ready to deploy?', ok: 'Deploy'
                }               
            }
        }

        stage('Terraform Apply') {
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWS-CCIAB', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {              
                sh '''
                docker run --rm -v $(pwd):/terraform terraform-docker apply -auto-approve
                '''
                }
            }
        }
    }
}


        // stage('Build') {
        //     agent {
        //         docker {
        //             image 'node:18-alpine'
        //             reuseNode true
        //         }
        //     }
        //     steps {
        //         sh '''
        //             echo $PATH
        //             npm install terraform
        //             cd /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        //             ls -la
        //         '''
        //     }
        // }



                    // cd node_modules
                    // ls -la
                    // cd terraform
                    // ls -la
                    // cd ..
                    // ls -la
                    // cd terraform
                    // ls -la
                    // cd ..

// pipeline {
//     agent any
//     environment {
//         AWS_DEFAULT_REGION = 'us-east-1'
//     }
//     stages {

//         stage 

//     //     stage("first stage") {
//     //         steps {
//     //             sh "terraform --version"
//     //         }
//     //     }

//     //     stage('Checkout Code') {
//     //         steps {
//     //             checkout scm
//     //         }
//     //     }
//     //     stage('Terraform Init') {
//     //         steps {
//     //             script {
//     //                 sh 'terraform init'
//     //             }
//     //         }
//     //     }
//     //     stage('Terraform Plan') {
//     //         steps {
//     //             script {
//     //                 sh 'terraform plan -out=tfplan'
//     //             }
//     //         }
//     //     }
//     //     stage('Terraform Apply') {
//     //         steps {
//     //             script {
//     //                 sh 'terraform apply -auto-approve tfplan'
//     //             }
//     //         }
//     //     }
//     //     // stage('Upload State to S3') {
//     //     //     steps {
//     //     //         script {
//     //     //             sh 'aws s3 cp terraform.tfstate s3://your-bucket-name'
//     //     //         }
//     //     //     }
//     //     // }
//     //     stage('Terraform Output') {
//     //         steps {
//     //             script {
//     //                 sh 'terraform output'
//     //             }
//     //         }
//     //     }
//     // }
//     post {
//         always {
//             cleanWs()
//         }
//     }
// }
